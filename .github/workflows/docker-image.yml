name: Docker Build and Test

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the CI job

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker Buildx (for multi-platform builds, if required)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub (if you're pushing to Docker Hub)
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t team2_app .

    # Run the Docker container with the Mistral API key passed as an argument
    - name: Run Docker container with Mistral API key
      run: |
        mistral_key="${{ secrets.MISTRAL_API_KEY }}"
        docker run -d -p 5002:5002 -p 6002:6002 -e API_KEY=$mistral_key team2_app
        sleep 10  # Allow time for the container to start

    # Check if the app is running (you can adjust this test to your app's specifics)
    - name: Test if the app is running
      run: |
        curl --fail http://localhost:5002/team2 || exit 1  # Check if app responds

    # Optionally, stop and remove the container after testing
    - name: Clean up Docker container
      run: |
        docker ps -q -f "name=team2_app" | xargs docker stop | xargs docker rm

  # Optionally, push the Docker image to a registry (e.g., Docker Hub or GitHub Container Registry)
  push:
    needs: build  # Ensure this job runs only after the build job has succeeded
    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker tag team2_app ${{ secrets.DOCKER_USERNAME }}/team2_app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/team2_app:latest
